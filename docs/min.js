'use strict';var _typeof=typeof Symbol==='function'&&typeof Symbol.iterator==='symbol'?function(obj){return typeof obj}:function(obj){return obj&&typeof Symbol==='function'&&obj.constructor===Symbol&&obj!==Symbol.prototype?'symbol':typeof obj};angular.module('pageHighway',['ngRoute']);'use strict';var carCollision=function carCollision(dimensions){function constant(x){return function(){return x}}function jiggle(){return(Math.random()-0.5)*1e-6}function x(d){return d.x+d.vx}function y(d){return d.y+d.vy}var nodes=void 0,radii=void 0,strengths=void 0,strength=void 0,iterations=1;if(typeof dimensions!=='function'){if(dimensions==null){dimensions={w:1,h:1}}else if((typeof dimensions==='undefined'?'undefined':_typeof(dimensions))!=='object'){dimensions={w:+dimensions,h:+dimensions}}else{if(!dimensions.h)dimensions.h=1;if(!dimensions.w)dimensions.w=1}dimensions=constant(dimensions)}function force(){var i=void 0,n=nodes.length,tree=void 0,node=void 0,xi=void 0,yi=void 0,rx=void 0,ry=void 0,ri2=void 0;for(var k=0;k<iterations;++k){tree=d3.quadtree(nodes,x,y).visitAfter(prepare);nodes.forEach(function(i,node){node.distanceBehind=false;node.distanceToStop=false;node.occupiedLanes=[];node.willChangeLanes=false});nodes.forEach(function(i,node){rx=radii[node.index].w*2;ry=radii[node.index].h;ri2=rx*rx;xi=node.x+node.vx;yi=node.y+node.vy;tree.visit(apply)});nodes.forEach(function(i,node){if(node.distanceToStop===false&&Math.abs(node.cruiseControl-node.v.speed)>=strengths[node.index]/5){node.v.speed+=Math.sign(node.cruiseControl-node.v.speed)*strengths[node.index]/5}})}function apply(quad,x0,y0,x1,y1){var data=quad.data,rj=quad.r,r=rx+rj;if(data){if(data.index>node.index){var _x=xi-data.x-data.vx,_y=yi-data.y-data.vy,l=_x*_x+_y*_y;if(l>=r*r)return}return}return x0>xi+r||x1<xi-r||y0>yi+r||y1<yi-r}}function prepare(quad){if(quad.data)return quad.r=radii[quad.data.index].w;for(var i=quad.r=0;i<4;++i){if(quad[i]&&quad[i].r>quad.r){quad.r=quad[i].r}}}function initialize(){if(!nodes)return;var n=nodes.length,node=void 0;radii=new Array(n);strengths=new Array(n);for(var i=0;i<n;++i){node=nodes[i];radii[node.index]=dimensions(node,i,nodes);strengths[node.index]=strength(node,i,nodes)}}force.initialize=function(_){nodes=_;initialize()};force.iterations=function(_){return arguments.length?(iterations=+_,force):iterations};force.strength=function(_){return arguments.length?(strength=typeof _!=='function'?constant(_==null?1:+_):_,force):strength};if(!strength)force.strength(1);return force};'use strict';angular.module('pageHighway').config(['$locationProvider','$routeProvider',function($locationProvider,$routeProvider){$routeProvider.when('/d3/highway/',{templateUrl:'pages/d3/highway/highway.html',controllerAs:'$ctrl',controller:'ctrlHighway'})}]).controller('ctrlHighway',['$scope',function($scope){var _this=this;angular.element('[ng-view]').attr('ng-view','pageHighway');this.sim=null;this.svg=angular.element('svg');this.d3=d3.select('svg');this.cars=[];this.clearSim=function(){if(_this.sim&&_this.sim.stop)_this.sim.stop();_this.sim=d3.forceSimulation().stop().alphaMin(0.01);_this.sim.alphaDecay(0).velocityDecay(0)};$scope.btnPause='Resume';this.buildSim=function(){var forces=[];forces.push(carCollision(CAR));for(var i=0,f=forces.length;i<f;i++){_this.sim.force(i,forces.pop())}_this.sim.on('tick',function(){_this.d3.selectAll('g.roadway').selectAll('text').text(function(d){return d.carsPassed});_this.nodes.selectAll('rect').attr('x',function(d){if(d.x<0-CAR.w){d.x=2000+CAR.w;d.movingTo=Math.floor(Math.random()*roadways[d.roadway].lanes.length);d.lane=d.movingTo;roadways[d.roadway].carsPassed++;d.y=roadways[d.roadway].lanes[d.lane];d.v.angle=90+Math.sign(d.cruiseControl)*90;d.v.speed=d.cruiseControl}if(d.x>2000+CAR.w&&d.vx>0){d.v.angle=90+Math.sign(d.cruiseControl)*90;d.v.speed=d.cruiseControl;d.x=2000+CAR.w}d.vx=Math.cos(d.v.angle*Math.PI/180)*d.v.speed;return d.x-CAR.w/2}).attr('y',function(d){if(d.occupiedLanes.indexOf(d.movingTo)!==-1)d.movingTo=d.lane;if(Math.abs(roadways[d.roadway].lanes[d.movingTo]-d.y)<=roadways[d.roadway].laneWidth/30){d.lane=d.movingTo;d.vy=0}else{d.vy=Math.sign(roadways[d.roadway].lanes[d.movingTo]-d.y)*roadways[d.roadway].laneWidth/30}d.vy=Math.sin(d.v.angle*Math.PI/180)*d.v.speed;return d.y-CAR.h/2})})};$scope.toggleSim=function(){if($scope.btnPause==='Pause')_this.pauseSim();else _this.resumeSim()};this.pauseSim=function(){_this.d3.selectAll('g.roadway').classed('animated',false);_this.sim.stop();$scope.btnPause='Resume'};this.resumeSim=function(){_this.d3.selectAll('g.roadway').classed('animated',true);_this.sim.restart();$scope.btnPause='Pause'};function changeLanes(){this.movingTo=this.lane===roadways[this.roadway].lanes.length-1?this.lane-1:this.lane+1}function Car(roadway){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(typeof roadway!=='number')return;if(roadway<0||roadway>=roadways.length)return;if(!roadways[roadway])return;Object.assign(this,options);this.roadway=roadway;if(typeof this.lane!=='number'||!roadways[roadway].lanes[this.lane]){this.lane=Math.floor(Math.random()*roadways[roadway].lanes.length)}if(typeof this.movingTo!=='number')this.movingTo=this.lane;this.y=roadways[roadway].lanes[this.lane];this.x=this.x||2000+CAR.w;this.vx=0;this.vy=0;this.will=Object.assign({preferedLane:roadways[roadway].lanes.length>2?1:0,passRight:false},this.will||{});this.separation=this.separation||CAR.w/10;this.v=Object.assign({angle:180,speed:5},this.v||{})}Car.prototype.changeLanes=changeLanes;this.addCar=function(i,car){car=new Car(i,car);if(!car)return;if(!car.id){car.id='car'+_this.cars.length}_this.cars.push(car);_this.sim.nodes(_this.cars);var cars=_this.d3.selectAll('g.car').data(_this.sim.nodes()).enter().append('g').classed('car',true);cars.append('rect').attr('width',CAR.w).attr('height',CAR.h);_this.nodes=_this.d3.selectAll('g.car')};var CAR={w:90,h:40};var roadways=[{carsPassed:0,laneWidth:70,numLanes:2}];this.roadways=roadways;roadways.forEach(function(roadway,i){roadway.y=2000/(roadways.length+1)*(i+1);roadway.i=i});roadways.forEach(function(roadway,j){roadway.lanes=[];for(var i=0;i<roadway.numLanes;i++){roadway.lanes.push(i*roadway.laneWidth+2000/(roadways.length+1)*(j+1)-roadway.numLanes*roadway.laneWidth/2+roadway.laneWidth/2)}});var d3roadways=this.d3.selectAll('g.roadway').data(roadways);d3roadways=d3roadways.enter().append('g').classed('roadway',true).merge(d3roadways);d3roadways.append('rect').attr('x',0).attr('width',2000).attr('height',function(d){return d.numLanes*d.laneWidth}).attr('y',function(d){return d.y-d.numLanes*d.laneWidth/2});d3roadways.append('text').attr('x',20).attr('y',function(d){return d.y-d.numLanes*d.laneWidth/2-10});roadways.forEach(function(roadway,i){var ry=2000/(roadways.length+1)*(i+1);for(var _i=1;_i<roadway.numLanes;_i++){var line=_this.d3.selectAll('g.roadway').append('line');var y=_i*roadway.laneWidth+ry-roadway.numLanes*roadway.laneWidth/2;line.attr('x1',2000);line.attr('x2',0);line.attr('y1',y);line.attr('y2',y)}});this.clearSim();this.buildSim();roadways.forEach(function(roadway,i){_this.addCar(i,{id:'center',x:2000/2,lane:i,cruiseControl:0});_this.addCar(i,{lane:1,x:2000-CAR.w*5,cruiseControl:5})});this.resumeSim()}]);'use strict';angular.module('sandbox',['pageHighway','ngRoute']).config(['$locationProvider','$routeProvider',function($locationProvider,$routeProvider){$locationProvider.html5Mode(false);$routeProvider.when('/',{templateUrl:'pages/home.html',controllerAs:'$ctrl',controller:function controller(){}}).otherwise({redirectTo:'/'})}]).directive('toggleUl',function(){return{restrict:'A',link:function link(scope,element,attrs){element.on('click',function(){element.toggleClass('expand')}).on('keypress',function(e){if(e.key==='Enter'||e.key===' '){e.preventDefault();element.toggleClass('expand')}})}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
